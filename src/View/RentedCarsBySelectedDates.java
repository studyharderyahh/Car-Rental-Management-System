/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package View;

import Model.CarModel;
import Model.IndividualCar;
import Model.RentalRecord;
import Model.StatusoftheCar;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import qualitycars.CarRentalSystem;

/* * * * * * * * * 
 * @author Elisa *
 * @ID 220005803 * 
 * * * * * * * * */

public class RentedCarsBySelectedDates extends javax.swing.JInternalFrame {

    DefaultTableModel model;
    CarRentalSystem rentedcar;
    /**
     * Creates new form RentedCarsBySelectedDates
     */
    public RentedCarsBySelectedDates() {
        initComponents();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        Date date1 = null;
        Date date2 = null;
        Date date3 = null;
        Date date4 = null;
        Date date5 = null;
        Date date6 = null;
        Date date7 = null;
        Date date8 = null;
        
        try {
            date1 = dateFormat.parse("2022-08-09");
            date2 = dateFormat.parse("2022-03-25");
            date3 = dateFormat.parse("2023-08-14");
            date4 = dateFormat.parse("2023-09-12");
            date5 = dateFormat.parse("2023-08-14");
            date6 = dateFormat.parse("2023-10-14");
            date7 = dateFormat.parse("2022-05-24");
            date8 = dateFormat.parse("2022-07-21");
            } catch (ParseException e) {
            e.printStackTrace();// Handle the parsing exception
        }

        model = (DefaultTableModel) CarTable.getModel();
        IndividualCar indCar1 = new IndividualCar("XYZ789", "Blue", 8000, StatusoftheCar.RentedOut);
        IndividualCar indCar2 = new IndividualCar("PQR789", "White", 2000, StatusoftheCar.RentedOut);
        IndividualCar indCar3 = new IndividualCar("ABC123", "Red", 15000, StatusoftheCar.RentedOut);
        IndividualCar indCar4 = new IndividualCar("DEF456", "Black", 10000, StatusoftheCar.RentedOut);

        RentalRecord record1 = new RentalRecord(date1, date2, indCar1, new CarModel(" Camry", "Toyota", "Petrol", 5, 25000));
        RentalRecord record2 = new RentalRecord(date3, date4, indCar2, new CarModel(" Accord", "Honda", "Hybrid", 5, 28000));
        RentalRecord record3 = new RentalRecord(date5, date6, indCar3, new CarModel("Civic", "Honda", "Petrol", 5, 22000));
        RentalRecord record4 = new RentalRecord(date7, date8,  indCar4, new CarModel("Corolla", "Toyota", "Hybrid", 5, 26000));

        ArrayList<RentalRecord> rentalRecords = new ArrayList<>();
        rentalRecords.add(record1);
        rentalRecords.add(record2);
        rentalRecords.add(record3);
        rentalRecords.add(record4);
        rentedcar = new CarRentalSystem(rentalRecords);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        endDatePicker = new org.jdesktop.swingx.JXDatePicker();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        startDatePicker = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        CarTable = new javax.swing.JTable();
        searchButton = new javax.swing.JButton();

        jLabel1.setText("Start Date");

        jLabel2.setText("Start Date");

        CarTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Car Model", "Car Manufacturer", "Car registration No", "Car Bodytpe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(CarTable);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(startDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(endDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(93, 93, 93))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(startDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        Date startDate = startDatePicker.getDate();
        Date endDate = endDatePicker.getDate();

         if (startDate == null || endDate == null) {
            JOptionPane.showMessageDialog(rootPane, "Please select both start and end dates.");
        }
         
         ArrayList<RentalRecord> individualCars = rentedcar.getRentalRecordsBetweenDates(startDate, endDate);
        ArrayList<RentalRecord> recordsBetweenDates = null;
         
         if (recordsBetweenDates.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No data found between the selected dates.");
        } else {
            // Data found, update the table
            updateTable(recordsBetweenDates);
            JOptionPane.showMessageDialog(rootPane, "Data found successfully.");
        }
    } 
    
     private void updateTable(ArrayList<RentalRecord> records) {
        model.setRowCount(0); // Clear the table

        for (RentalRecord record : records) {
            addRowToTable(record);
        }
    }
      private void addRowToTable(RentalRecord record) {
        Object rows[] = new Object[4];

//        record.getCar().getModel().getModel(),     
//        record.getCar().getModel().getManufacturerName(),     
//        record.getCar().getRegisterationNumber(),     
//        record.getCar().getTypeofCar().toString()
        // Set the table model to the JTable
        CarTable.setModel(model);

        
    }//GEN-LAST:event_searchButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CarTable;
    private org.jdesktop.swingx.JXDatePicker endDatePicker;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchButton;
    private org.jdesktop.swingx.JXDatePicker startDatePicker;
    // End of variables declaration//GEN-END:variables
}
